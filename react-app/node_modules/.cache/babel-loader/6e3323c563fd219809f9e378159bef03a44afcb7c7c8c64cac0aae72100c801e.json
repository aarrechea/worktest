{"ast":null,"code":"var _jsxFileName = \"/home/adrian/Dropbox/worktest/react-app/src/components/evaluations/EvaluationPage.jsx\",\n  _s = $RefreshSig$();\n// Imports\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./css/evaluationPage.css\";\nimport NavigationBar from \"../navBar/NavBar\";\nimport EvaluationList from \"./EvaluationList\";\nimport { useNavigate } from \"react-router-dom\";\nimport GeneralButton from \"../general/GeneralButton\";\nimport axiosService from \"../../helpers/axios\";\nimport { getUser } from \"../hooks/actions\";\n\n// Evaluation component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EvaluationPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [companyList, setCompanyList] = useState();\n  const [style, setStyle] = useState();\n  const [message, setMessage] = useState('Choose a company to create the evaluation');\n  const [generalTitle, setGeneralTitle] = useState(\"Evaluations Menu\");\n  const [generalTitleStyle, setGeneralTitleStyle] = useState({});\n\n  // Function to get all companies to create the evaluation\n  function fcnGetCompanies() {\n    axiosService.get(`/company`).then(res => res.data).then(data => {\n      setCompanyList(() => [...data]);\n    });\n  }\n\n  // Executing the fcnGetCompanies function\n  useEffect(() => {\n    fcnGetCompanies();\n  }, []);\n\n  // Create evaluation component\n  const CreateEvaluation = () => {\n    /* Creating the evaluation */\n    function handleCreateClick() {\n      let companyId;\n      document.querySelectorAll('.companyRadio').forEach(function (item) {\n        if (item.checked) {\n          companyId = item.id;\n        }\n      });\n      if (!companyId) {\n        setStyle({\n          color: 'red'\n        });\n        setMessage('You have to choose a company to create the evaluation');\n        setTimeout(() => {\n          setStyle({\n            color: 'black'\n          });\n          setMessage('Choose a company to create the evaluation');\n        }, 3000);\n      } else {\n        const data = {\n          'company': companyId,\n          'user': getUser().id\n        };\n        axiosService.post(\"/evaluation/\", data).then(res => {\n          fcnGetCompanies();\n          window.scrollTo(0, 0);\n          setGeneralTitle('The evaluation was succesfully created');\n          setGeneralTitleStyle({\n            color: 'green'\n          });\n          setTimeout(() => {\n            setGeneralTitle('Evaluations Menu');\n            setGeneralTitleStyle({\n              color: 'black'\n            });\n          }, 3000);\n        });\n      }\n    }\n\n    // Return create evaluation\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"divCreateEvaluation\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"divCreateEvaluationTitle\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: style,\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GeneralButton, {\n          children: \"Create\",\n          style: {\n            height: '3rem'\n          },\n          onClick: handleCreateClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"divCreateEvaluationRadio\",\n        children: (companyList === null || companyList === void 0 ? void 0 : companyList.length) === 0 ? /*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"lblCompaniesListCard\",\n          children: \"The list is empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this) : companyList === null || companyList === void 0 ? void 0 : companyList.map((element, index) => /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            value: element.id,\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"spanCompanyName\",\n                children: \"Company name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 45\n              }, this), element.name, /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"companyRadio\",\n                className: \"companyRadio\",\n                id: element.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 41\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  };\n\n  // Return evaluation page\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"divEvaluationPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"divEvaluationFirstBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: generalTitleStyle,\n        children: generalTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GeneralButton, {\n        children: \"Create\",\n        onClick: () => navigate(\"/create-evaluation\", {\n          state: {\n            mode: 'Create'\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EvaluationList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"evaSeparatorParagraph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateEvaluation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"evaSeparatorParagraph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n};\n\n// Export\n_s(EvaluationPage, \"I6Xp0HXKdo0ql4ZGqFIxL0JaXT0=\", false, function () {\n  return [useNavigate];\n});\n_c = EvaluationPage;\nexport default EvaluationPage;\nvar _c;\n$RefreshReg$(_c, \"EvaluationPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","NavigationBar","EvaluationList","useNavigate","GeneralButton","axiosService","getUser","jsxDEV","_jsxDEV","EvaluationPage","_s","navigate","companyList","setCompanyList","style","setStyle","message","setMessage","generalTitle","setGeneralTitle","generalTitleStyle","setGeneralTitleStyle","fcnGetCompanies","get","then","res","data","CreateEvaluation","handleCreateClick","companyId","document","querySelectorAll","forEach","item","checked","id","color","setTimeout","post","window","scrollTo","children","fileName","_jsxFileName","lineNumber","columnNumber","height","onClick","length","map","element","index","value","className","name","type","state","mode","_c","$RefreshReg$"],"sources":["/home/adrian/Dropbox/worktest/react-app/src/components/evaluations/EvaluationPage.jsx"],"sourcesContent":["// Imports\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./css/evaluationPage.css\";\nimport NavigationBar from \"../navBar/NavBar\";\nimport EvaluationList from \"./EvaluationList\";\nimport { useNavigate } from \"react-router-dom\";\nimport GeneralButton from \"../general/GeneralButton\";\nimport axiosService from \"../../helpers/axios\";\nimport { getUser } from \"../hooks/actions\";\n\n\n\n// Evaluation component\nconst EvaluationPage = () => {\n    const navigate = useNavigate();\n    const [companyList, setCompanyList] = useState();\n    const [style, setStyle] = useState();\n    const [message, setMessage] = useState('Choose a company to create the evaluation')\n    const [generalTitle, setGeneralTitle] = useState(\"Evaluations Menu\");\n    const [generalTitleStyle, setGeneralTitleStyle] = useState({});\n\n\n    // Function to get all companies to create the evaluation\n    function fcnGetCompanies() {\n        axiosService\n            .get(`/company`)\n            .then(res => res.data)\n            .then((data) => {\n                setCompanyList(() => [...data]);\n            })\n    }\n\n\n    // Executing the fcnGetCompanies function\n    useEffect(() => {\n        fcnGetCompanies();\n    }, []);\n\n\n    \n    // Create evaluation component\n    const CreateEvaluation = () => {\n        /* Creating the evaluation */\n        function handleCreateClick() {\n            let companyId;\n            \n            document.querySelectorAll('.companyRadio').forEach(function(item) {\n                if (item.checked) {\n                    companyId = item.id;\n                }\n            });\n            \n            if (!companyId) {\n                setStyle({color:'red'})\n                setMessage('You have to choose a company to create the evaluation');\n\n                setTimeout(() => {\n                    setStyle({color:'black'})\n                    setMessage('Choose a company to create the evaluation');\n                }, 3000);\n\n            } else {\n                const data = {\n                    'company':companyId,\n                    'user':getUser().id\n                }\n\n                axiosService\n                    .post(\"/evaluation/\", data)\n                    .then(res => {\n                        fcnGetCompanies();\n                        window.scrollTo(0, 0);\n                        setGeneralTitle('The evaluation was succesfully created');\n                        setGeneralTitleStyle({color:'green'});\n\n\n                        setTimeout(() => {\n                            setGeneralTitle('Evaluations Menu');\n                            setGeneralTitleStyle({color:'black'});\n                        }, 3000);\n                    })\n            }\n        }\n\n\n        // Return create evaluation\n        return (\n            <div id=\"divCreateEvaluation\">\n                <div id=\"divCreateEvaluationTitle\">\n                    <h3 style={style}>{message}</h3>\n\n                    <GeneralButton\n                        children='Create' \n                        style={{height:'3rem'}}\n                        onClick={handleCreateClick}\n                    />\n                </div>\n                \n                <div id=\"divCreateEvaluationRadio\">\n                    {companyList?.length === 0 \n                        ?\n                            <label id=\"lblCompaniesListCard\">The list is empty</label> \n                        :                \n                            companyList?.map((element, index) => (                                \n                                <ul>\n                                    <li key={index} value={element.id}>\n                                        <label>\n                                            <span className=\"spanCompanyName\">Company name</span>\n                                            {element.name}\n                                            <input \n                                                type=\"radio\" \n                                                name=\"companyRadio\" \n                                                className=\"companyRadio\"\n                                                id={element.id}                                                \n                                            />\n                                        </label>                                        \n                                    </li>\n                                </ul>\n                            ))\n                    }\n                </div>                \n            </div>\n        )\n    }\n\n\n\n    // Return evaluation page\n    return (\n        <div id=\"divEvaluationPage\">\n            <div id=\"divEvaluationFirstBar\">\n                <h1 style={generalTitleStyle}>{generalTitle}</h1>\n\n                <GeneralButton\n                    children='Create'\n                    onClick={() => navigate(\"/create-evaluation\", {state:{mode:'Create'}})}\n                />\n            </div>\n\n            <NavigationBar/>\n            <EvaluationList/>\n\n            <p className=\"evaSeparatorParagraph\"/>\n\n            <CreateEvaluation/>\n\n            <p className=\"evaSeparatorParagraph\"/>\n        </div>\n    )\n};\n\n\n\n// Export\nexport default EvaluationPage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}