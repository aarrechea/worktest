{"ast":null,"code":"var _jsxFileName = \"/home/adrian/Dropbox/worktest/react-app/src/components/company/CompaniesList.jsx\",\n  _s2 = $RefreshSig$();\n// Imports\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axiosService from \"../../helpers/axios\";\nimport \"./css/companiesList.css\";\nimport GeneralDelete from \"../general/GeneralDelete\";\n\n// Companies list\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CompaniesList = ({\n  refreshList,\n  setRefreshList\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  /* States */\n  const [companiesList, setCompaniesList] = useState([]);\n  const [companyObject, setCompanyObject] = useState({});\n  const [showDelete, setShowDelete] = useState({\n    visibility: 'hidden',\n    opacity: '0'\n  });\n  const [showMessage, setShowMessage] = useState({\n    height: '0',\n    fontSize: '0rem'\n  }); // to show if the company was deleted    \n\n  /* Function to get all companies */\n  function fcnGetCompanies() {\n    axiosService.get(`/company`).then(res => res.data).then(data => {\n      setCompaniesList(() => [...data]);\n    });\n  }\n  ;\n\n  /* List of companies */\n  useEffect(() => {\n    fcnGetCompanies();\n  }, []);\n\n  // If a company is deleted, I have to refresh the list\n  if (refreshList) {\n    fcnGetCompanies();\n    setRefreshList(false);\n  }\n\n  // Company card to loop over with the companies already created\n  const CompanyCard = ({\n    name,\n    id,\n    evaMade\n  }) => {\n    _s();\n    const navigate = useNavigate();\n\n    /* Edit the company */\n    function handleClickEdit() {\n      navigate(\"/create-company\", {\n        state: {\n          mode: 'Edit',\n          id: id\n        }\n      });\n    }\n\n    // Delete the company\n    function handleDelete(id, name) {\n      setCompanyObject({\n        'id': id,\n        'name': name\n      });\n      setShowDelete({\n        visibility: 'visible',\n        opacity: '1'\n      });\n    }\n\n    // Return company card\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"companyCard\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"divCompanyCard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"divCompanyCardLabels\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: [\"Company\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 57\n            }, this), \"name\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            disabled: true,\n            className: \"name\",\n            value: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"divCompanyCardButtons\",\n          children: evaMade === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleClickEdit,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(id, name),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: true,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: true,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  };\n\n  // If the company was deleted, the height should be 3rem\n  _s(CompanyCard, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n  if (showMessage.height === '3rem') {\n    setTimeout(() => {\n      setShowMessage({\n        height: '0rem',\n        fontSize: '0rem'\n      });\n    }, 3000);\n  }\n\n  // Return companies list\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GeneralDelete, {\n      object: companyObject,\n      showDelete: showDelete,\n      setShowDelete: setShowDelete,\n      setShowMessage: setShowMessage,\n      path: 'company',\n      element: 'company',\n      setRefreshList: setRefreshList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: showMessage,\n      id: \"divCompaniesMessage\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"The company was successfully deleted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"companiesListTitle\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: \"Companies list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"companiesListCard\",\n      children: companiesList.length === 0 ? /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"lblCompaniesListCard\",\n        children: \"The list is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }, this) : companiesList === null || companiesList === void 0 ? void 0 : companiesList.map((element, index) => {\n        return /*#__PURE__*/_jsxDEV(CompanyCard, {\n          name: element.name,\n          id: element.id,\n          evaMade: element.evaluations_made\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 33\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n// Export\n_s2(CompaniesList, \"tDk7JHmpFElkzwUU0edt4qbgqxg=\");\n_c = CompaniesList;\nexport default CompaniesList;\nvar _c;\n$RefreshReg$(_c, \"CompaniesList\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axiosService","GeneralDelete","jsxDEV","_jsxDEV","Fragment","_Fragment","CompaniesList","refreshList","setRefreshList","_s2","_s","$RefreshSig$","companiesList","setCompaniesList","companyObject","setCompanyObject","showDelete","setShowDelete","visibility","opacity","showMessage","setShowMessage","height","fontSize","fcnGetCompanies","get","then","res","data","CompanyCard","name","id","evaMade","navigate","handleClickEdit","state","mode","handleDelete","children","className","fileName","_jsxFileName","lineNumber","columnNumber","disabled","value","onClick","setTimeout","object","path","element","style","htmlFor","length","map","index","evaluations_made","_c","$RefreshReg$"],"sources":["/home/adrian/Dropbox/worktest/react-app/src/components/company/CompaniesList.jsx"],"sourcesContent":["// Imports\nimport React, {useState, useEffect} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axiosService from \"../../helpers/axios\";\nimport \"./css/companiesList.css\";\nimport GeneralDelete from \"../general/GeneralDelete\";\n\n\n\n// Companies list\nconst CompaniesList = ({refreshList, setRefreshList}) => {\n    /* States */\n    const [companiesList, setCompaniesList] = useState([]);        \n    const [companyObject, setCompanyObject] = useState({});\n    const [showDelete, setShowDelete] = useState({visibility:'hidden', opacity:'0'});\n    const [showMessage, setShowMessage] = useState({height:'0', fontSize:'0rem'}); // to show if the company was deleted    \n\n\n    /* Function to get all companies */\n    function fcnGetCompanies() {\n        axiosService\n            .get(`/company`)\n            .then(res => res.data)\n            .then((data) => {\n                setCompaniesList(() => [...data]);\n            })\n    };\n\n    /* List of companies */\n    useEffect(() => {\n        fcnGetCompanies();\n    }, []);\n\n\n    // If a company is deleted, I have to refresh the list\n    if (refreshList) {\n        fcnGetCompanies();\n        setRefreshList(false);\n    }\n\n\n    // Company card to loop over with the companies already created\n    const CompanyCard = ({name, id, evaMade}) => {      \n        const navigate = useNavigate();\n                    \n    \n        /* Edit the company */\n        function handleClickEdit() {         \n            navigate(\"/create-company\", {state:{mode:'Edit', id:id}});\n        }\n\n\n        // Delete the company\n        function handleDelete(id, name) {            \n            setCompanyObject({'id':id, 'name':name});\n            setShowDelete({visibility:'visible', opacity:'1'})\n        }\n    \n    \n    \n        // Return company card\n        return (\n            <div id=\"companyCard\">\n                <div id=\"divCompanyCard\">\n                    <div id=\"divCompanyCardLabels\">\n                        <label className=\"label\">Company<br/>name</label>\n                        <textarea disabled className=\"name\" value={name}></textarea>\n                    </div>\n    \n                    <div id=\"divCompanyCardButtons\">\n                        {evaMade === 0 \n                            ?\n                            <>\n                                <button onClick={handleClickEdit}>Edit</button>\n                                <button onClick={() => handleDelete(id, name)}>Delete</button>\n                            </>                             \n                            :\n                            <>\n                                <button disabled>Edit</button>\n                                <button disabled>Delete</button>\n                            </> \n                        }\n                    </div>                \n                </div>\n            </div>\n        )\n    }\n\n    \n    // If the company was deleted, the height should be 3rem\n    if (showMessage.height === '3rem') {        \n        setTimeout(() => {\n            setShowMessage({height:'0rem', fontSize:'0rem'})            \n        }, 3000);\n    }\n\n\n    // Return companies list\n    return (\n        <>            \n            <GeneralDelete\n                object={companyObject}\n                showDelete={showDelete}\n                setShowDelete={setShowDelete}                \n                setShowMessage={setShowMessage}\n                path={'company'}\n                element={'company'}\n                setRefreshList={setRefreshList}\n            />\n\n            <div style={showMessage} id=\"divCompaniesMessage\">\n                <label>The company was successfully deleted</label>\n            </div>\n\n            <div id=\"companiesListTitle\">\n                <label htmlFor=\"\">Companies list</label>\n            </div>\n            \n            <div id=\"companiesListCard\">\n                {companiesList.length === 0 \n                    ?\n                        <label id=\"lblCompaniesListCard\">The list is empty</label> \n                    :\n            \n                        companiesList?.map((element, index) => {\n                            return (\n                                <CompanyCard \n                                    key={index} \n                                    name={element.name}                                \n                                    id={element.id}\n                                    evaMade={element.evaluations_made}\n                                />\n                            )\n                        })\n                }\n            </div>\n        </>\n    )\n};\n\n\n\n// Export\nexport default CompaniesList\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}