{"ast":null,"code":"var _jsxFileName = \"/home/adrian/Dropbox/worktest/react-app/src/components/company/CompaniesEditCreate.jsx\",\n  _s = $RefreshSig$();\n// Imports\nimport React, { useRef, useState } from \"react\";\nimport GeneralButton from \"../general/GeneralButton\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport \"./css/companiesEditCreate.css\";\nimport axiosService from \"../../helpers/axios\";\nimport { getUser } from \"../hooks/actions\";\n\n// Create edit component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreateEditCompany = () => {\n  _s();\n  const navigate = useNavigate();\n  const [companyName, setCompanyName] = useState();\n  const initialName = useRef();\n  const user = getUser();\n\n  // Location brings the edit mode if applicable\n  const location = useLocation();\n\n  // Get the company to be edited if mode is Edit\n  if (location.state.mode === \"Edit\") {\n    axiosService.get(`/company/${location.state.id}/`).then(res => res.data).then(data => {\n      setCompanyName(() => data.name);\n    });\n  }\n\n  // Handle create or edit click\n  function handleCreateEdit() {\n    let data = {};\n    if (initialName.current.length < 3) {\n      return;\n    } else {\n      data = {\n        'name': initialName.current,\n        'user': user.id\n      };\n    }\n    if (location.state.mode === \"Create\") {\n      axiosService.post(\"/company/\", data).then(res => {\n        navigate(-1);\n      });\n    } else {\n      axiosService.put(`/company/${location.state.id}/`, data).then(() => {\n        navigate(-1);\n      });\n    }\n  }\n\n  // To handle each time a key is pressed in the textarea\n  function handleOnChange(e) {\n    initialName.current = e.target.value;\n  }\n\n  // Return\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"divCompanyCreateButtons\",\n      children: [/*#__PURE__*/_jsxDEV(GeneralButton, {\n        children: location.state.mode,\n        onClick: handleCreateEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GeneralButton, {\n        children: \"Previous\",\n        onClick: () => navigate(-1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"divCompanyData\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Company data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"companyName\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"companyName\",\n        id: \"\",\n        placeholder: \"Company name\",\n        defaultValue: companyName,\n        onChange: e => handleOnChange(e),\n        maxLength: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n// Export\n_s(CreateEditCompany, \"g66Sn3AOecRpepd8r2zfcQMz9ok=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = CreateEditCompany;\nexport default CreateEditCompany;\nvar _c;\n$RefreshReg$(_c, \"CreateEditCompany\");","map":{"version":3,"names":["React","useRef","useState","GeneralButton","useLocation","useNavigate","axiosService","getUser","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateEditCompany","_s","navigate","companyName","setCompanyName","initialName","user","location","state","mode","get","id","then","res","data","name","handleCreateEdit","current","length","post","put","handleOnChange","e","target","value","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","placeholder","defaultValue","onChange","maxLength","_c","$RefreshReg$"],"sources":["/home/adrian/Dropbox/worktest/react-app/src/components/company/CompaniesEditCreate.jsx"],"sourcesContent":["// Imports\nimport React, { useRef, useState } from \"react\";\nimport GeneralButton from \"../general/GeneralButton\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport \"./css/companiesEditCreate.css\";\nimport axiosService from \"../../helpers/axios\";\nimport { getUser } from \"../hooks/actions\";\n\n\n\n// Create edit component\nconst CreateEditCompany = () => {\n    const navigate = useNavigate();\n    const [companyName, setCompanyName] = useState();\n    const initialName = useRef();    \n    const user = getUser();\n\n\n    // Location brings the edit mode if applicable\n    const location = useLocation();\n\n\n    // Get the company to be edited if mode is Edit\n    if (location.state.mode === \"Edit\") {\n        axiosService\n            .get(`/company/${location.state.id}/`)\n            .then(res => res.data)\n            .then((data) => {\n                setCompanyName(() => data.name);                \n            })\n    }\n\n\n    // Handle create or edit click\n    function handleCreateEdit() {\n        let data = {};\n\n        if (initialName.current.length < 3) {\n            return\n        } else {\n            data = {\n                'name':initialName.current,\n                'user':user.id\n            }\n        }\n\n\n        if (location.state.mode === \"Create\") {\n            axiosService                \n                .post(\"/company/\", data)\n                .then((res) => {\n                    navigate(-1)\n                })            \n        } else {\n            axiosService\n                .put(`/company/${location.state.id}/`, data)\n                .then(() => {\n                    navigate(-1)\n                })            \n        }\n    }\n    \n\n    // To handle each time a key is pressed in the textarea\n    function handleOnChange(e) {\n        initialName.current = e.target.value;        \n    }\n\n\n    \n    // Return\n    return (\n        <>\n            <div id=\"divCompanyCreateButtons\">\n                <GeneralButton\n                    children={location.state.mode}\n                    onClick={handleCreateEdit}\n                />\n\n                <GeneralButton\n                    children='Previous'\n                    onClick={() => navigate(-1)}\n                />\n            </div>\n\n            <div id=\"divCompanyData\">\n                <h1>Company data</h1>\n\n                <label htmlFor=\"companyName\">Name</label>\n                <textarea \n                    name=\"companyName\" \n                    id=\"\" placeholder=\"Company name\" \n                    defaultValue={companyName}\n                    onChange={(e) => handleOnChange(e)}\n                    maxLength={50}\n                ></textarea>\n            </div>\n        </>\n        \n    )\n};\n\n\n\n// Export\nexport default CreateEditCompany;\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}