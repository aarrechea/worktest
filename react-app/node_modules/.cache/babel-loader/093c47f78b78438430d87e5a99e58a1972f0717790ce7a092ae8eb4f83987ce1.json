{"ast":null,"code":"// Imports\nimport axios from \"axios\";\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\nimport { getRefreshToken, getUser } from \"../components/hooks/actions\";\n\n// Axios component\nconst axiosService = axios.create({\n  baseURL: \"http://localhost:8000\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Interceptor request\naxiosService.interceptors.request.use(async config => {\n  const {\n    access\n  } = JSON.parse(localStorage.getItem(\"auth\"));\n  config.headers.Authorization = `Bearer ${access}`; // adding access to the headers of the request\n  return config;\n});\n\n// Interceptor response\naxiosService.interceptors.response.use(res => Promise.resolve(res), err => Promise.reject(err));\n\n// Refresh logic\nconst refreshAuthLogic = async failedRequest => {\n  return axios.post(\"/auth/refresh/\", null, {\n    baseURL: \"http://localhost:8000\",\n    headers: {\n      Authorization: `Bearer ${getRefreshToken()}`\n    }\n  }).then(res => {\n    const {\n      access\n    } = res.data;\n    failedRequest.response.config.headers[\"Authorization\"] = \"Bearer \" + access;\n    localStorage.setItem(\"auth\", JSON.stringify({\n      access,\n      refresh: getRefreshToken(),\n      user: getUser()\n    }));\n  }).catch(() => {\n    localStorage.removeItem(\"auth\");\n  });\n};\n\n// Creating the authentication interceptor\ncreateAuthRefreshInterceptor(axiosService, refreshAuthLogic);\n\n// Custom fetcher\nexport function fetcher(url) {\n  return axiosService.get(url).then(res => res.data);\n}\n;\n\n// Export\nexport default axiosService;","map":{"version":3,"names":["axios","createAuthRefreshInterceptor","getRefreshToken","getUser","axiosService","create","baseURL","headers","interceptors","request","use","config","access","JSON","parse","localStorage","getItem","Authorization","response","res","Promise","resolve","err","reject","refreshAuthLogic","failedRequest","post","then","data","setItem","stringify","refresh","user","catch","removeItem","fetcher","url","get"],"sources":["/home/adrian/Dropbox/worktest/react-app/src/helpers/axios.js"],"sourcesContent":["// Imports\nimport axios from \"axios\";\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\nimport { getRefreshToken, getUser } from \"../components/hooks/actions\";\n\n\n\n// Axios component\nconst axiosService = axios.create({\n    baseURL: \"http://localhost:8000\",\n    headers: {\"Content-Type\":\"application/json\"},\n});\n\n\n\n// Interceptor request\naxiosService.interceptors.request.use(async (config) => {\n    const {access} = JSON.parse(localStorage.getItem(\"auth\"));\n    config.headers.Authorization = `Bearer ${access}`; // adding access to the headers of the request\n    return config\n});\n\n\n\n// Interceptor response\naxiosService.interceptors.response.use(\n    (res) => Promise.resolve(res),\n    (err) => Promise.reject(err),\n)\n\n\n\n// Refresh logic\nconst refreshAuthLogic = async (failedRequest) => {\n    return axios\n        .post(\"/auth/refresh/\", null, {\n            baseURL: \"http://localhost:8000\",\n            headers: {Authorization: `Bearer ${getRefreshToken()}`},\n        })\n        .then((res) => {\n            const {access} = res.data;\n            failedRequest.response.config.headers[\"Authorization\"] = \"Bearer \" + access;\n            localStorage.setItem(\"auth\", JSON.stringify({access, refresh:getRefreshToken(), user:getUser()}))\n        })\n        .catch(() => {\n            localStorage.removeItem(\"auth\");\n        });\n};\n\n\n\n// Creating the authentication interceptor\ncreateAuthRefreshInterceptor(axiosService, refreshAuthLogic)\n\n\n\n// Custom fetcher\nexport function fetcher(url) {\n    return axiosService\n        .get(url)\n        .then((res) => res.data)\n};\n\n\n\n// Export\nexport default axiosService;\n\n\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,4BAA4B,MAAM,oBAAoB;AAC7D,SAASC,eAAe,EAAEC,OAAO,QAAQ,6BAA6B;;AAItE;AACA,MAAMC,YAAY,GAAGJ,KAAK,CAACK,MAAM,CAAC;EAC9BC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;IAAC,cAAc,EAAC;EAAkB;AAC/C,CAAC,CAAC;;AAIF;AACAH,YAAY,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,MAAOC,MAAM,IAAK;EACpD,MAAM;IAACC;EAAM,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACzDL,MAAM,CAACJ,OAAO,CAACU,aAAa,GAAG,UAAUL,MAAM,EAAE,CAAC,CAAC;EACnD,OAAOD,MAAM;AACjB,CAAC,CAAC;;AAIF;AACAP,YAAY,CAACI,YAAY,CAACU,QAAQ,CAACR,GAAG,CACjCS,GAAG,IAAKC,OAAO,CAACC,OAAO,CAACF,GAAG,CAAC,EAC5BG,GAAG,IAAKF,OAAO,CAACG,MAAM,CAACD,GAAG,CAC/B,CAAC;;AAID;AACA,MAAME,gBAAgB,GAAG,MAAOC,aAAa,IAAK;EAC9C,OAAOzB,KAAK,CACP0B,IAAI,CAAC,gBAAgB,EAAE,IAAI,EAAE;IAC1BpB,OAAO,EAAE,uBAAuB;IAChCC,OAAO,EAAE;MAACU,aAAa,EAAE,UAAUf,eAAe,CAAC,CAAC;IAAE;EAC1D,CAAC,CAAC,CACDyB,IAAI,CAAER,GAAG,IAAK;IACX,MAAM;MAACP;IAAM,CAAC,GAAGO,GAAG,CAACS,IAAI;IACzBH,aAAa,CAACP,QAAQ,CAACP,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGK,MAAM;IAC3EG,YAAY,CAACc,OAAO,CAAC,MAAM,EAAEhB,IAAI,CAACiB,SAAS,CAAC;MAAClB,MAAM;MAAEmB,OAAO,EAAC7B,eAAe,CAAC,CAAC;MAAE8B,IAAI,EAAC7B,OAAO,CAAC;IAAC,CAAC,CAAC,CAAC;EACrG,CAAC,CAAC,CACD8B,KAAK,CAAC,MAAM;IACTlB,YAAY,CAACmB,UAAU,CAAC,MAAM,CAAC;EACnC,CAAC,CAAC;AACV,CAAC;;AAID;AACAjC,4BAA4B,CAACG,YAAY,EAAEoB,gBAAgB,CAAC;;AAI5D;AACA,OAAO,SAASW,OAAOA,CAACC,GAAG,EAAE;EACzB,OAAOhC,YAAY,CACdiC,GAAG,CAACD,GAAG,CAAC,CACRT,IAAI,CAAER,GAAG,IAAKA,GAAG,CAACS,IAAI,CAAC;AAChC;AAAC;;AAID;AACA,eAAexB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}