{"ast":null,"code":"var _jsxFileName = \"/home/adrian/Dropbox/worktest/react-app/src/routes/ProtectedRoute.jsx\";\n// Imports\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { getUser } from \"../components/hooks/actions\";\n\n// Protected route to secure the user is authenticated\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProtectedRoute({\n  children\n}) {\n  const user = getUser();\n  return user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 37\n  }, this);\n}\n_c = ProtectedRoute;\n;\n\n// Export\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","getUser","Fragment","_Fragment","jsxDEV","_jsxDEV","ProtectedRoute","children","user","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/adrian/Dropbox/worktest/react-app/src/routes/ProtectedRoute.jsx"],"sourcesContent":["// Imports\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { getUser } from \"../components/hooks/actions\";\n\n\n\n// Protected route to secure the user is authenticated\nfunction ProtectedRoute({children}) {\n    const user = getUser();\n\n    return user ? <>{children}</> : <Navigate to=\"/login\"/>\n};\n\n\n\n// Export\nexport default ProtectedRoute;\n\n\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,6BAA6B;;AAIrD;AAAA,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,cAAcA,CAAC;EAACC;AAAQ,CAAC,EAAE;EAChC,MAAMC,IAAI,GAAGP,OAAO,CAAC,CAAC;EAEtB,OAAOO,IAAI,gBAAGH,OAAA,CAAAF,SAAA;IAAAI,QAAA,EAAGA;EAAQ,gBAAG,CAAC,gBAAGF,OAAA,CAACL,QAAQ;IAACS,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAC3D;AAACC,EAAA,GAJQR,cAAc;AAItB;;AAID;AACA,eAAeA,cAAc;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}