{"ast":null,"code":"// Imports\nimport axios from \"axios\";\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\nimport { getRefreshToken, getUser, getAccessToken } from \"../components/hooks/actions\";\n\n// Axios component\nconst axiosService = axios.create({\n  baseURL: \"http://localhost:8000/api\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Adding request interceptor to add headers to the request\naxiosService.interceptors.request.use(async config => {\n  config.headers.Authorization = `Bearer ${getAccessToken()}`;\n  return config;\n});\n\n// Interceptor response\naxiosService.interceptors.response.use(res => Promise.resolve(res), err => Promise.reject(err));\n\n// Refresh logic\nconst refreshAuthLogic = async failedRequest => {\n  return axios.post(\"/auth/refresh/\", null, {\n    baseURL: \"http://localhost:8000\",\n    headers: {\n      Authorization: `Bearer ${getRefreshToken()}`\n    }\n  }).then(res => {\n    const {\n      access\n    } = res.data;\n    failedRequest.response.config.headers[\"Authorization\"] = \"Bearer \" + access;\n    localStorage.setItem(\"auth\", JSON.stringify({\n      access,\n      refresh: getRefreshToken(),\n      user: getUser()\n    }));\n  }).catch(() => {\n    localStorage.removeItem(\"auth\");\n  });\n};\n\n// Creating the authentication interceptor\ncreateAuthRefreshInterceptor(axiosService, refreshAuthLogic);\n\n// Custom fetcher\nexport function fetcher(url) {\n  return axiosService.get(url).then(res => res.data);\n}\n;\n\n// Export\nexport default axiosService;","map":{"version":3,"names":["axios","createAuthRefreshInterceptor","getRefreshToken","getUser","getAccessToken","axiosService","create","baseURL","headers","interceptors","request","use","config","Authorization","response","res","Promise","resolve","err","reject","refreshAuthLogic","failedRequest","post","then","access","data","localStorage","setItem","JSON","stringify","refresh","user","catch","removeItem","fetcher","url","get"],"sources":["/home/adrian/Dropbox/worktest/react-app/src/helpers/axios.js"],"sourcesContent":["// Imports\nimport axios from \"axios\";\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\nimport { getRefreshToken, getUser, getAccessToken } from \"../components/hooks/actions\";\n\n\n\n// Axios component\nconst axiosService = axios.create({\n    baseURL: \"http://localhost:8000/api\",\n    headers: {\"Content-Type\":\"application/json\"},\n});\n\n\n// Adding request interceptor to add headers to the request\naxiosService.interceptors.request.use(async (config) => {      \n    config.headers.Authorization = `Bearer ${getAccessToken()}`;\n    return config;\n})\n\n\n\n// Interceptor response\naxiosService.interceptors.response.use(\n    (res) => Promise.resolve(res),\n    (err) => Promise.reject(err),\n)\n\n\n\n// Refresh logic\nconst refreshAuthLogic = async (failedRequest) => {\n    return axios\n        .post(\"/auth/refresh/\", null, {\n            baseURL: \"http://localhost:8000\",\n            headers: {Authorization: `Bearer ${getRefreshToken()}`},\n        })\n        .then((res) => {\n            const {access} = res.data;\n            failedRequest.response.config.headers[\"Authorization\"] = \"Bearer \" + access;\n            localStorage.setItem(\"auth\", JSON.stringify({access, refresh:getRefreshToken(), user:getUser()}))\n        })\n        .catch(() => {\n            localStorage.removeItem(\"auth\");\n        });\n};\n\n\n\n// Creating the authentication interceptor\ncreateAuthRefreshInterceptor(axiosService, refreshAuthLogic)\n\n\n\n// Custom fetcher\nexport function fetcher(url) {\n    return axiosService\n        .get(url)\n        .then((res) => res.data)\n};\n\n\n\n// Export\nexport default axiosService;\n\n\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,4BAA4B,MAAM,oBAAoB;AAC7D,SAASC,eAAe,EAAEC,OAAO,EAAEC,cAAc,QAAQ,6BAA6B;;AAItF;AACA,MAAMC,YAAY,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC9BC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IAAC,cAAc,EAAC;EAAkB;AAC/C,CAAC,CAAC;;AAGF;AACAH,YAAY,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,MAAOC,MAAM,IAAK;EACpDA,MAAM,CAACJ,OAAO,CAACK,aAAa,GAAG,UAAUT,cAAc,CAAC,CAAC,EAAE;EAC3D,OAAOQ,MAAM;AACjB,CAAC,CAAC;;AAIF;AACAP,YAAY,CAACI,YAAY,CAACK,QAAQ,CAACH,GAAG,CACjCI,GAAG,IAAKC,OAAO,CAACC,OAAO,CAACF,GAAG,CAAC,EAC5BG,GAAG,IAAKF,OAAO,CAACG,MAAM,CAACD,GAAG,CAC/B,CAAC;;AAID;AACA,MAAME,gBAAgB,GAAG,MAAOC,aAAa,IAAK;EAC9C,OAAOrB,KAAK,CACPsB,IAAI,CAAC,gBAAgB,EAAE,IAAI,EAAE;IAC1Bf,OAAO,EAAE,uBAAuB;IAChCC,OAAO,EAAE;MAACK,aAAa,EAAE,UAAUX,eAAe,CAAC,CAAC;IAAE;EAC1D,CAAC,CAAC,CACDqB,IAAI,CAAER,GAAG,IAAK;IACX,MAAM;MAACS;IAAM,CAAC,GAAGT,GAAG,CAACU,IAAI;IACzBJ,aAAa,CAACP,QAAQ,CAACF,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGgB,MAAM;IAC3EE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACL,MAAM;MAAEM,OAAO,EAAC5B,eAAe,CAAC,CAAC;MAAE6B,IAAI,EAAC5B,OAAO,CAAC;IAAC,CAAC,CAAC,CAAC;EACrG,CAAC,CAAC,CACD6B,KAAK,CAAC,MAAM;IACTN,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;EACnC,CAAC,CAAC;AACV,CAAC;;AAID;AACAhC,4BAA4B,CAACI,YAAY,EAAEe,gBAAgB,CAAC;;AAI5D;AACA,OAAO,SAASc,OAAOA,CAACC,GAAG,EAAE;EACzB,OAAO9B,YAAY,CACd+B,GAAG,CAACD,GAAG,CAAC,CACRZ,IAAI,CAAER,GAAG,IAAKA,GAAG,CAACU,IAAI,CAAC;AAChC;AAAC;;AAID;AACA,eAAepB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}